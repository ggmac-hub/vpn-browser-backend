// Generated by view binder compiler. Do not edit!
package com.vpnbrowser.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vpnbrowser.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChromeStyleBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBack;

  @NonNull
  public final Button btnForward;

  @NonNull
  public final Button btnHome;

  @NonNull
  public final Button btnMenu;

  @NonNull
  public final Button btnRefresh;

  @NonNull
  public final TextView pageTitle;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView securityIndicator;

  @NonNull
  public final EditText urlEditText;

  @NonNull
  public final WebView webview;

  private ActivityChromeStyleBinding(@NonNull LinearLayout rootView, @NonNull Button btnBack,
      @NonNull Button btnForward, @NonNull Button btnHome, @NonNull Button btnMenu,
      @NonNull Button btnRefresh, @NonNull TextView pageTitle, @NonNull ProgressBar progressBar,
      @NonNull TextView securityIndicator, @NonNull EditText urlEditText,
      @NonNull WebView webview) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnForward = btnForward;
    this.btnHome = btnHome;
    this.btnMenu = btnMenu;
    this.btnRefresh = btnRefresh;
    this.pageTitle = pageTitle;
    this.progressBar = progressBar;
    this.securityIndicator = securityIndicator;
    this.urlEditText = urlEditText;
    this.webview = webview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChromeStyleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChromeStyleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chrome_style, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChromeStyleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      Button btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_forward;
      Button btnForward = ViewBindings.findChildViewById(rootView, id);
      if (btnForward == null) {
        break missingId;
      }

      id = R.id.btn_home;
      Button btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btn_menu;
      Button btnMenu = ViewBindings.findChildViewById(rootView, id);
      if (btnMenu == null) {
        break missingId;
      }

      id = R.id.btn_refresh;
      Button btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.page_title;
      TextView pageTitle = ViewBindings.findChildViewById(rootView, id);
      if (pageTitle == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.security_indicator;
      TextView securityIndicator = ViewBindings.findChildViewById(rootView, id);
      if (securityIndicator == null) {
        break missingId;
      }

      id = R.id.url_edit_text;
      EditText urlEditText = ViewBindings.findChildViewById(rootView, id);
      if (urlEditText == null) {
        break missingId;
      }

      id = R.id.webview;
      WebView webview = ViewBindings.findChildViewById(rootView, id);
      if (webview == null) {
        break missingId;
      }

      return new ActivityChromeStyleBinding((LinearLayout) rootView, btnBack, btnForward, btnHome,
          btnMenu, btnRefresh, pageTitle, progressBar, securityIndicator, urlEditText, webview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
