// Generated by view binder compiler. Do not edit!
package com.vpnbrowser.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vpnbrowser.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogManualNodeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnClearInput;

  @NonNull
  public final Button btnPasteFromClipboard;

  @NonNull
  public final EditText editNodeName;

  @NonNull
  public final EditText editNodeUrl;

  private DialogManualNodeBinding(@NonNull LinearLayout rootView, @NonNull Button btnClearInput,
      @NonNull Button btnPasteFromClipboard, @NonNull EditText editNodeName,
      @NonNull EditText editNodeUrl) {
    this.rootView = rootView;
    this.btnClearInput = btnClearInput;
    this.btnPasteFromClipboard = btnPasteFromClipboard;
    this.editNodeName = editNodeName;
    this.editNodeUrl = editNodeUrl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogManualNodeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogManualNodeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_manual_node, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogManualNodeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_clear_input;
      Button btnClearInput = ViewBindings.findChildViewById(rootView, id);
      if (btnClearInput == null) {
        break missingId;
      }

      id = R.id.btn_paste_from_clipboard;
      Button btnPasteFromClipboard = ViewBindings.findChildViewById(rootView, id);
      if (btnPasteFromClipboard == null) {
        break missingId;
      }

      id = R.id.edit_node_name;
      EditText editNodeName = ViewBindings.findChildViewById(rootView, id);
      if (editNodeName == null) {
        break missingId;
      }

      id = R.id.edit_node_url;
      EditText editNodeUrl = ViewBindings.findChildViewById(rootView, id);
      if (editNodeUrl == null) {
        break missingId;
      }

      return new DialogManualNodeBinding((LinearLayout) rootView, btnClearInput,
          btnPasteFromClipboard, editNodeName, editNodeUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
